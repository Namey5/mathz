const std = @import("std");

test "Swizzle.mask" {
    try std.testing.expectEqual([1]u2{0}, Swizzle.x.mask());
    try std.testing.expectEqual([2]u2{ 0, 1 }, Swizzle.xy.mask());
    try std.testing.expectEqual([3]u2{ 0, 1, 2 }, Swizzle.xyz.mask());
    try std.testing.expectEqual([4]u2{ 0, 1, 2, 3 }, Swizzle.xyzw.mask());
    try std.testing.expectEqual([4]u2{ 3, 2, 1, 0 }, Swizzle.wzyx.mask());
    try std.testing.expectEqual([4]u2{ 2, 0, 3, 1 }, Swizzle.zxwy.mask());
    try std.testing.expectEqual([2]u2{ 3, 3 }, Swizzle.ww.mask());
    try std.testing.expectEqual([3]u2{ 1, 1, 1 }, Swizzle.yyy.mask());
    try std.testing.expectEqual([4]u2{ 2, 2, 2, 2 }, Swizzle.zzzz.mask());
    try std.testing.expectEqual([4]u2{ 0, 1, 0, 1 }, Swizzle.xyxy.mask());
}

pub const Swizzle = enum(u16) {
    pub fn len(comptime self: Swizzle) u3 {
        if (@intFromEnum(self) > 0x0fff) {
            return 4;
        } else if (@intFromEnum(self) > 0x00ff) {
            return 3;
        } else if (@intFromEnum(self) > 0x000f) {
            return 2;
        } else {
            return 1;
        }
    }

    pub fn mask(comptime self: Swizzle) [self.len()]u2 {
        var result: [self.len()]u2 = undefined;
        for (0..result.len) |i| {
            result[(result.len - 1) - i] = @intCast(((@intFromEnum(self) >> @intCast(i * 4)) & 0x000f) - 1);
        }
        return result;
    }

    x = 0x0001,
    y = 0x0002,
    z = 0x0003,
    w = 0x0004,

    xx = 0x0011,
    xy = 0x0012,
    xz = 0x0013,
    xw = 0x0014,

    yx = 0x0021,
    yy = 0x0022,
    yz = 0x0023,
    yw = 0x0024,

    zx = 0x0031,
    zy = 0x0032,
    zz = 0x0033,
    zw = 0x0034,

    wx = 0x0041,
    wy = 0x0042,
    wz = 0x0043,
    ww = 0x0044,

    xxx = 0x0111,
    xxy = 0x0112,
    xxz = 0x0113,
    xxw = 0x0114,
    xyx = 0x0121,
    xyy = 0x0122,
    xyz = 0x0123,
    xyw = 0x0124,
    xzx = 0x0131,
    xzy = 0x0132,
    xzz = 0x0133,
    xzw = 0x0134,
    xwx = 0x0141,
    xwy = 0x0142,
    xwz = 0x0143,
    xww = 0x0144,

    yxx = 0x0211,
    yxy = 0x0212,
    yxz = 0x0213,
    yxw = 0x0214,
    yyx = 0x0221,
    yyy = 0x0222,
    yyz = 0x0223,
    yyw = 0x0224,
    yzx = 0x0231,
    yzy = 0x0232,
    yzz = 0x0233,
    yzw = 0x0234,
    ywx = 0x0241,
    ywy = 0x0242,
    ywz = 0x0243,
    yww = 0x0244,

    zxx = 0x0311,
    zxy = 0x0312,
    zxz = 0x0313,
    zxw = 0x0314,
    zyx = 0x0321,
    zyy = 0x0322,
    zyz = 0x0323,
    zyw = 0x0324,
    zzx = 0x0331,
    zzy = 0x0332,
    zzz = 0x0333,
    zzw = 0x0334,
    zwx = 0x0341,
    zwy = 0x0342,
    zwz = 0x0343,
    zww = 0x0344,

    wxx = 0x0411,
    wxy = 0x0412,
    wxz = 0x0413,
    wxw = 0x0414,
    wyx = 0x0421,
    wyy = 0x0422,
    wyz = 0x0423,
    wyw = 0x0424,
    wzx = 0x0431,
    wzy = 0x0432,
    wzz = 0x0433,
    wzw = 0x0434,
    wwx = 0x0441,
    wwy = 0x0442,
    wwz = 0x0443,
    www = 0x0444,

    xxxx = 0x1111,
    xxxy = 0x1112,
    xxxz = 0x1113,
    xxxw = 0x1114,
    xxyx = 0x1121,
    xxyy = 0x1122,
    xxyz = 0x1123,
    xxyw = 0x1124,
    xxzx = 0x1131,
    xxzy = 0x1132,
    xxzz = 0x1133,
    xxzw = 0x1134,
    xxwx = 0x1141,
    xxwy = 0x1142,
    xxwz = 0x1143,
    xxww = 0x1144,
    xyxx = 0x1211,
    xyxy = 0x1212,
    xyxz = 0x1213,
    xyxw = 0x1214,
    xyyx = 0x1221,
    xyyy = 0x1222,
    xyyz = 0x1223,
    xyyw = 0x1224,
    xyzx = 0x1231,
    xyzy = 0x1232,
    xyzz = 0x1233,
    xyzw = 0x1234,
    xywx = 0x1241,
    xywy = 0x1242,
    xywz = 0x1243,
    xyww = 0x1244,
    xzxx = 0x1311,
    xzxy = 0x1312,
    xzxz = 0x1313,
    xzxw = 0x1314,
    xzyx = 0x1321,
    xzyy = 0x1322,
    xzyz = 0x1323,
    xzyw = 0x1324,
    xzzx = 0x1331,
    xzzy = 0x1332,
    xzzz = 0x1333,
    xzzw = 0x1334,
    xzwx = 0x1341,
    xzwy = 0x1342,
    xzwz = 0x1343,
    xzww = 0x1344,
    xwxx = 0x1411,
    xwxy = 0x1412,
    xwxz = 0x1413,
    xwxw = 0x1414,
    xwyx = 0x1421,
    xwyy = 0x1422,
    xwyz = 0x1423,
    xwyw = 0x1424,
    xwzx = 0x1431,
    xwzy = 0x1432,
    xwzz = 0x1433,
    xwzw = 0x1434,
    xwwx = 0x1441,
    xwwy = 0x1442,
    xwwz = 0x1443,
    xwww = 0x1444,

    yxxx = 0x2111,
    yxxy = 0x2112,
    yxxz = 0x2113,
    yxxw = 0x2114,
    yxyx = 0x2121,
    yxyy = 0x2122,
    yxyz = 0x2123,
    yxyw = 0x2124,
    yxzx = 0x2131,
    yxzy = 0x2132,
    yxzz = 0x2133,
    yxzw = 0x2134,
    yxwx = 0x2141,
    yxwy = 0x2142,
    yxwz = 0x2143,
    yxww = 0x2144,
    yyxx = 0x2211,
    yyxy = 0x2212,
    yyxz = 0x2213,
    yyxw = 0x2214,
    yyyx = 0x2221,
    yyyy = 0x2222,
    yyyz = 0x2223,
    yyyw = 0x2224,
    yyzx = 0x2231,
    yyzy = 0x2232,
    yyzz = 0x2233,
    yyzw = 0x2234,
    yywx = 0x2241,
    yywy = 0x2242,
    yywz = 0x2243,
    yyww = 0x2244,
    yzxx = 0x2311,
    yzxy = 0x2312,
    yzxz = 0x2313,
    yzxw = 0x2314,
    yzyx = 0x2321,
    yzyy = 0x2322,
    yzyz = 0x2323,
    yzyw = 0x2324,
    yzzx = 0x2331,
    yzzy = 0x2332,
    yzzz = 0x2333,
    yzzw = 0x2334,
    yzwx = 0x2341,
    yzwy = 0x2342,
    yzwz = 0x2343,
    yzww = 0x2344,
    ywxx = 0x2411,
    ywxy = 0x2412,
    ywxz = 0x2413,
    ywxw = 0x2414,
    ywyx = 0x2421,
    ywyy = 0x2422,
    ywyz = 0x2423,
    ywyw = 0x2424,
    ywzx = 0x2431,
    ywzy = 0x2432,
    ywzz = 0x2433,
    ywzw = 0x2434,
    ywwx = 0x2441,
    ywwy = 0x2442,
    ywwz = 0x2443,
    ywww = 0x2444,

    zxxx = 0x3111,
    zxxy = 0x3112,
    zxxz = 0x3113,
    zxxw = 0x3114,
    zxyx = 0x3121,
    zxyy = 0x3122,
    zxyz = 0x3123,
    zxyw = 0x3124,
    zxzx = 0x3131,
    zxzy = 0x3132,
    zxzz = 0x3133,
    zxzw = 0x3134,
    zxwx = 0x3141,
    zxwy = 0x3142,
    zxwz = 0x3143,
    zxww = 0x3144,
    zyxx = 0x3211,
    zyxy = 0x3212,
    zyxz = 0x3213,
    zyxw = 0x3214,
    zyyx = 0x3221,
    zyyy = 0x3222,
    zyyz = 0x3223,
    zyyw = 0x3224,
    zyzx = 0x3231,
    zyzy = 0x3232,
    zyzz = 0x3233,
    zyzw = 0x3234,
    zywx = 0x3241,
    zywy = 0x3242,
    zywz = 0x3243,
    zyww = 0x3244,
    zzxx = 0x3311,
    zzxy = 0x3312,
    zzxz = 0x3313,
    zzxw = 0x3314,
    zzyx = 0x3321,
    zzyy = 0x3322,
    zzyz = 0x3323,
    zzyw = 0x3324,
    zzzx = 0x3331,
    zzzy = 0x3332,
    zzzz = 0x3333,
    zzzw = 0x3334,
    zzwx = 0x3341,
    zzwy = 0x3342,
    zzwz = 0x3343,
    zzww = 0x3344,
    zwxx = 0x3411,
    zwxy = 0x3412,
    zwxz = 0x3413,
    zwxw = 0x3414,
    zwyx = 0x3421,
    zwyy = 0x3422,
    zwyz = 0x3423,
    zwyw = 0x3424,
    zwzx = 0x3431,
    zwzy = 0x3432,
    zwzz = 0x3433,
    zwzw = 0x3434,
    zwwx = 0x3441,
    zwwy = 0x3442,
    zwwz = 0x3443,
    zwww = 0x3444,

    wxxx = 0x4111,
    wxxy = 0x4112,
    wxxz = 0x4113,
    wxxw = 0x4114,
    wxyx = 0x4121,
    wxyy = 0x4122,
    wxyz = 0x4123,
    wxyw = 0x4124,
    wxzx = 0x4131,
    wxzy = 0x4132,
    wxzz = 0x4133,
    wxzw = 0x4134,
    wxwx = 0x4141,
    wxwy = 0x4142,
    wxwz = 0x4143,
    wxww = 0x4144,
    wyxx = 0x4211,
    wyxy = 0x4212,
    wyxz = 0x4213,
    wyxw = 0x4214,
    wyyx = 0x4221,
    wyyy = 0x4222,
    wyyz = 0x4223,
    wyyw = 0x4224,
    wyzx = 0x4231,
    wyzy = 0x4232,
    wyzz = 0x4233,
    wyzw = 0x4234,
    wywx = 0x4241,
    wywy = 0x4242,
    wywz = 0x4243,
    wyww = 0x4244,
    wzxx = 0x4311,
    wzxy = 0x4312,
    wzxz = 0x4313,
    wzxw = 0x4314,
    wzyx = 0x4321,
    wzyy = 0x4322,
    wzyz = 0x4323,
    wzyw = 0x4324,
    wzzx = 0x4331,
    wzzy = 0x4332,
    wzzz = 0x4333,
    wzzw = 0x4334,
    wzwx = 0x4341,
    wzwy = 0x4342,
    wzwz = 0x4343,
    wzww = 0x4344,
    wwxx = 0x4411,
    wwxy = 0x4412,
    wwxz = 0x4413,
    wwxw = 0x4414,
    wwyx = 0x4421,
    wwyy = 0x4422,
    wwyz = 0x4423,
    wwyw = 0x4424,
    wwzx = 0x4431,
    wwzy = 0x4432,
    wwzz = 0x4433,
    wwzw = 0x4434,
    wwwx = 0x4441,
    wwwy = 0x4442,
    wwwz = 0x4443,
    wwww = 0x4444,
};
